---
name: terrarium - terraform tools for dev environment

on:
  push:
    branches:
      - master
  #pull_request:

env:
  # github.repository as <account>/<repo>
  IMAGE_BASE: ${{ github.repository }}

jobs:
  build-images:
    name: Build images
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        image: ["terrarium"]
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          driver-opts: |
            image=moby/buildkit:master
            network=host
      -
        name: Login to ghcr.io
        if: success() && github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Docker metadata
        id: docker_image_metadata # you'll use this in the next step
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          images: |
            ghcr.io/${{ github.repository_owner }}/${{ matrix.image }}
          # Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
            type=latest
      # -
      #   name: Execute Buildx
      #   id: buildx_build
      #  #uses: docker/login-action@v1 
      #  with:
      #    registry: ghcr.io
      #    username: ${{ github.repository_owner }}
      #    password: ${{ secrets.GITHUB_TOKEN }}
      #   run: |
      #     docker buildx build \
      #       --platform linux/arm64 \
      #       --output "type=image,push=false" \
      #       --file ./terraform/docker/Dockerfile.terrarium ./terraform/docker
      # -
      #   name: Docker Buildx (push)
      #   id: buildx_push
      #   if: success() && github.event_name != 'pull_request'
      #   run: |
      #     docker buildx build --output "type=image,push=true" ${{ steps.prepare.outputs.buildx_args }}
      # -
      #   name: Inspect image
      #   if: always() && github.event_name != 'pull_request'
      #   run: |
      #     echo docker buildx imagetools inspect ${{ steps.prepare.outputs.docker_image }}:${{ steps.prepare.outputs.version }}
      - name: Buildx and push
        id: buildx_and_push
        uses: docker/build-push-action@v2
        with:
          context: ./terraform/docker
          file: terraform/docker/Dockerfile.${{ matrix.image }}
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_image_metadata.outputs.tags }}
          labels: ${{ steps.docker_image_metadata.outputs.labels }}
      #-
      #  name: Build and push image
      #  uses: docker/build-push-action@v2
      #  with:
      #    context: ./terraform/docker
      #    push: true
      #    file: terraform/docker/Dockerfile.${{ matrix.image }}
      #    tags: |
      #      ghcr.io/${{ github.repository_owner }}/${{ matrix.image }}:latest
